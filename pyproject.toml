[build-system]
build-backend = "hatchling.build"
requires = [
  "hatchling>=1.25",
]

[project]
name = "pyproject-fmt-mirror"
version = "2.3.1"
description = "Format your pyproject.toml file"
readme = "README.md"
keywords = [
  "format",
  "pyproject",
]
license.file = "LICENSE.txt"
authors = [
  { name = "Bernat Gabor", email = "gaborjbernat@gmail.com" },
]
requires-python = ">=3.9"
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "pyproject-fmt==2.3.1",
]

[tool.hatch]
build.targets.wheel.bypass-selection = true

[tool.ruff]
line-length = 120
format.preview = true
format.docstring-code-line-length = 100
format.docstring-code-format = true
lint.select = [
  "ALL",
]
lint.ignore = [
  "ANN101", # no type annotation for self
  "ANN401", # allow Any as type annotation
  "COM812", # Conflict with formatter
  "CPY",    # No copyright statements
  "D203",   # `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible
  "D212",   # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible
  "DOC",    # not supported
  "DOC501", # not working with Sphinx
  "ISC001", # Conflict with formatter
  "S104",   # Possible binding to all interfaces
]
lint.per-file-ignores."tasks/**/*.py" = [
  "D",      # don't care about documentation in tsask files
  "INP001", # not a package
  "S",      # no security concerns in mirror
  "T201",   # prints are alloowed
]
lint.per-file-ignores."tests/**/*.py" = [
  "D",       # don't care about documentation in tests
  "FBT",     # don't care about booleans as positional arguments in tests
  "INP001",  # no implicit namespace
  "PLC2701", # private import
  "PLR0913", # any number of arguments in tests
  "PLR0917", # any number of arguments in tests
  "PLR2004", # Magic value used in comparison, consider replacing with a constant variable
  "S",       # no security concerns in tests
]
lint.isort = { known-first-party = [  ], required-imports = [
  "from __future__ import annotations",
] }
lint.preview = true

[tool.codespell]
builtin = "clear,usage,en-GB_to_en-US"
count = true

[tool.pyproject-fmt]
max_supported_python = "3.13"

[tool.pytest]
ini_options.testpaths = [
  "tests",
]
ini_options.verbosity_assertions = 2

[tool.coverage]
html.show_contexts = true
html.skip_covered = false
paths.source = [
  "src",
  ".tox/*/.venv/lib/*/site-packages",
  ".tox\\*\\.venv\\Lib\\site-packages",
  ".tox/*/lib/*/site-packages",
  ".tox\\*\\Lib\\site-packages",
  "**/src",
  "**\\src",
]
report.fail_under = 100
run.parallel = true
run.plugins = [
  "covdefaults",
]
covdefaults.subtract_omit = "*/__main__.py"

[tool.mypy]
show_error_codes = true
strict = true

[dependency-groups]
dev = [
  { include-group = "tasks" },
  { include-group = "test" },
  { include-group = "type" },
]
fix = [
  "pre-commit-uv>=4.1.3",
]
tasks = [
  "gitpython>=3.1.43",
  "httpx>=0.27.2",
  "packaging>=24.1",
]
test = [
  "covdefaults>=2.3",
  "pygments>=2.18",
  "pytest>=8.3.2",
  "pytest-cov>=5",
  { include-group = "fix" },
]
type = [
  "mypy==1.11.2",
  "types-cachetools>=5.5.0.20240820",
  "types-chardet>=5.0.4.6",
  { include-group = "test" },
  { include-group = "tasks" },
]
