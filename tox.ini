[tox]
requires =
    tox>=4.2
    tox-uv>=1.11.3
env_list =
    fix
    3.13
    3.12
    3.11
    3.10
    3.9
    type
    docs
    pkg_meta
skip_missing_interpreters = true

[testenv]
description = run the unit tests with pytest under {basepython}
package = wheel
wheel_build_env = .pkg
extras =
    test
set_env =
    COVERAGE_FILE = {work_dir}/.coverage.{env_name}
commands =
    python -m pytest {tty:--color=yes} {posargs: \
      --junitxml {work_dir}{/}junit.{env_name}.xml --cov {env_site_packages_dir}{/}pyproject_fmt \
      --cov {tox_root}{/}tests --cov-fail-under=100 \
      --cov-config=pyproject.toml --no-cov-on-fail --cov-report term-missing:skip-covered --cov-context=test \
      --cov-report html:{env_tmp_dir}{/}htmlcov --cov-report xml:{work_dir}{/}coverage.{env_name}.xml \
      tests}

[testenv:fix]
description = run static analysis and style check using flake8
skip_install = true
deps =
    pre-commit-uv>=4.1.3
commands =
    pre-commit run --all-files --show-diff-on-failure
    python -c 'print("hint: run {envdir}/bin/pre-commit install to add checks as pre-commit hook")'

[testenv:type]
description = run type check on code base
deps =
    mypy==1.11.2
commands =
    mypy src
    mypy tests

[testenv:docs]
description = build documentation
extras =
    docs
set_env =
    DOCS_OUT = {posargs:{work_dir}{/}docs_out}
commands =
    sphinx-build -d "{env_tmp_dir}{/}doc_tree" docs "{env:DOCS_OUT}" --color -b html
    python -c 'print(r"documentation available under file://{env:DOCS_OUT}{/}index.html")'

[testenv:pkg_meta]
description = check that the long description is valid
skip_install = true
deps =
    check-wheel-contents>=0.6
    twine>=5.1.1
    uv>=0.4.18
commands =
    uv build --sdist --wheel --out-dir {env_tmp_dir} .
    twine check {env_tmp_dir}{/}*
    check-wheel-contents --no-config {env_tmp_dir}

[testenv:dev]
description = generate a DEV environment
package = editable
extras =
    docs
    test
commands =
    uv pip tree
    python -c 'import sys; print(sys.executable)'
